#!/bin/sh

PLAN9=${PLAN9:-/usr/lib/plan9}
export PLAN9

SHELL=/usr/lib/plan9/bin/rc
export SHELL

EDITOR=E
export EDITOR

PAGER=
export PAGER

# nroff encodes bold and underlines using backspaces.
# acme doesn't handle this very well -- I don't know whether by design or not.
# Use 'col -b' to remove backspaces and characters just before them.
# TODO -- look for a way to tell nroff not to encode things with backspaces.
# NOTE -- this isn't required for the patched version of acme I've compiled --
# I've told it to remove previous characters in the buffer when a backspace is
# echoed. This may cause a problem with unicode, I don't know.
MANPAGER='col -b'
export MANPAGER

MANPATH=/usr/lib/plan9/man:
export MANPATH

# Want $PATH to be  $HOME/bin/plan9:$HOME/bin:$PLAN9/bin:<rest of path>
# so we first make sure those paths are at the start of the variable, then
# remove all duplicates from the path with an awk script.

PATH=$HOME/bin/plan9:$HOME/bin:$PLAN9/bin:$PATH

awkscript='
BEGIN {
	FS=":";
	HOME=ENVIRON["HOME"];
}

{
	# Iterate over all elements in $PATH.
    # Store uniq elements.
    # Print the uniq elements out.
    uniqCount = 0;
	for (i = 1; i < NF + 1; i++) {
        if ($i in seen)
            continue;
        seen[$i] = 1;
        directories[uniqCount++] = $i;
	}

    for ( i = 0; i < uniqCount - 1; i++ ) {
        printf("%s%s", directories[i], FS);
    }
    printf("%s", directories[uniqCount - 1]);
}
'

# This should be run by the plan9 version of awk (because we've already changed
# $PATH to have the plan9 versions at the start).
# Hence my tests on that version should carry across to any other platform I'm
# running this on, and I only have to hope $PLAN9 is set correctly.
PATH=$(echo $PATH | awk "$awkscript" -)
export PATH

case $# in
[1-9]*)
       exec "$@"
       ;;
esac
