#!/usr/bin/gawk -f

# Called on the command line

BEGIN {
    if (grep_pattern == "") {
        print "Require pattern to search for";
        print "Usage: show_column -v (column=<column> | column_title=<title>) -v grep_pattern=<filter> [ -v header_pattern=<header> ]";
        exit 1;
    }

    if (column == "") {
        column = 0;
        if (column_title == "") {
            print "Must specify column_title or column";
            print "Usage: show_column -v (column=<column> | column_title=<title>) -v grep_pattern=<filter> [ -v header_pattern=<header> ]";
            exit 1;
        }
    }

    if (header_pattern == "" && column_title)
        header_pattern = column_title;

    if (filter == "")
        filter = 0;
    else
        filter = 1;

}

# I don't really know whether this should work or if it does by some
# implementation detail -- (i.e. whether a boolean is defined to be an integer,
# with 0 as false etc) -- but it works and is neater than explicitly describing
# the two patterns.
column {
    if (xor(filter, ($column ~ grep_pattern)))
        print $0;
}

header_pattern && $0 ~ header_pattern {
    print $0;
}

header_pattern && $0 ~ header_pattern && !column {
    for (i = 1; i < NF + 1; ++i) {
        if ($i ~ column_title) {
            column = i;
            next;
        }
    }
}


